import * as fs from 'fs-extra';
import * as path from 'path';
import { saveProjectState } from './modules/state/stateManager';
import { calculateDiff } from './modules/diff/diffCalculator';

const logFolder: string = path.join(__dirname, '../.logTracker');
const projectPath: string = path.join(__dirname, '../');

// ÎåÄÏÉÅ Ìè¥ÎçîÏôÄ ÌôïÏû•Ïûê ÏÑ§Ï†ï
const targetFolders = [
    {
        folder: 'python_project',         // ÎåÄÏÉÅ Ìè¥Îçî
        includeExtensions: ['.py', '.txt', '.ipynb'], // Ìè¨Ìï®Ìï† ÌôïÏû•Ïûê
        excludeExtensions: ['.log']
    },
    // {
    //     folder: 'src/utils',
    //     includeExtensions: ['.ts', '.js'],
    //     excludeExtensions: ['.test.ts']
    // }
];

// ÏÉÅÌÉú Ï†ÄÏû• Ïã§Ìñâ
console.log('üîÑ Saving project state...');
saveProjectState(projectPath, targetFolders);

// ÏµúÏã† Îëê ÏÉÅÌÉú ÌååÏùº Ï∞æÍ∏∞
const states: string[] = fs
    .readdirSync(logFolder)
    .filter((f: string) => f.endsWith('.json')) // JSON ÌååÏùºÎßå ÌïÑÌÑ∞ÎßÅ
    .sort((a, b) => fs.statSync(path.join(logFolder, b)).mtimeMs - fs.statSync(path.join(logFolder, a)).mtimeMs);

if (states.length >= 2) {
    const oldStatePath: string = path.join(logFolder, states[1]);
    const newStatePath: string = path.join(logFolder, states[0]);

    console.log(`üîç Calculating diff between:\n- ${oldStatePath}\n- ${newStatePath}`);
    calculateDiff(oldStatePath, newStatePath);
} else {
    console.log('‚ö†Ô∏è Not enough states to calculate diff. Please save more states.');
}
